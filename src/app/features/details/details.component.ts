import { Component, OnDestroy, OnInit } from '@angular/core';import { ActivatedRoute } from '@angular/router';import { Observable, of, Subject } from 'rxjs';import { finalize, takeUntil } from 'rxjs/operators';import { PokeApiService } from '../../core/poke-api.service';import { IPokemonDetailsData } from '../../core/pokemon.model';@Component({  selector: 'app-details',  templateUrl: './details.component.html',  styleUrls: ['./details.component.scss']})export class DetailsComponent implements OnInit, OnDestroy {  public isLoading: boolean = true;  public pokemon$: Observable<IPokemonDetailsData>;  private onDestroy$: Subject<void> = new Subject<void>();  constructor(    private activatedRoute: ActivatedRoute,    private pokeApiService: PokeApiService  ) {}  // TODO: Logic should be splitted into smaller methods and moved to service  public ngOnInit() {    this.activatedRoute      .params      .pipe(         takeUntil(this.onDestroy$)       )      .subscribe((params: any) =>  {        const idParam = params.id;        if (/^[1-9][0-9]*$/.test(idParam)) {          this.isLoading = true;          this.pokemon$ = this.pokeApiService            .getPokemonById(+idParam)            .pipe(              finalize(() => this.isLoading = false)            );        } else {          this.isLoading = false;          this.pokemon$ = of(null);        }      });  }  public ngOnDestroy(): void {    this.onDestroy$.next();  }}